require(ggplot2)
require(gridExtra)
p1 <- ggplot(data_movie3_1,aes(x=hour,y=average,colour=date)) +
geom_line(size=1) +
xlab("시간대") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 네티즌 평균평점 1") +
theme(plot.title = element_text(color="black",size=14,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=12,face="bold"),
axis.title.y = element_text(color="blue",size=12,face="bold"))
p2 <- ggplot(data_movie3_2,aes(x=hour,y=average,colour=date)) +
geom_line(size=1) +
xlab("시간대") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 네티즌 평균평점 2") +
theme(plot.title = element_text(color="black",size=14,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=12,face="bold"),
axis.title.y = element_text(color="blue",size=12,face="bold"))
p3 <- ggplot(data_movie3_3,aes(x=hour,y=average,colour=date)) +
geom_line(size=1) +
xlab("시간대") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 네티즌 평균평점 3") +
theme(plot.title = element_text(color="black",size=14,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=12,face="bold"),
axis.title.y = element_text(color="blue",size=12,face="bold"))
p4 <- ggplot(data_movie3_4,aes(x=hour,y=average,colour=date)) +
geom_line(size=1) +
xlab("시간대") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 네티즌 평균평점 4") +
theme(plot.title = element_text(color="black",size=14,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=12,face="bold"),
axis.title.y = element_text(color="blue",size=12,face="bold"))
grid.arrange(p1,p2,p3,p4,nrow=2,ncol=2)
37*24
qqnorm(naver_movie$score) ; qqline(naver_movie$score)
qqnorm(naver_movie$score) ; qqline(naver_movie$score)
bartlett.test(score~date,data=naver_movie)
anova(lm(score~date,data=naver_movie))
res1 <- lm(score~date,data=naver_movie)
out1 <- aov(res1)
ph1 <- TukeyHSD(out1)
plot(ph1)
naver_movie$hour <- as.factor(naver_movie$hour)
bartlett.test(score~hour,data=naver_movie)
anova(lm(score~hour,data=naver_movie))
res2 <- lm(score~hour,data=naver_movie)
out2 <- aov(res2)
ph2 <- TukeyHSD(out2)
plot(ph2)
kruskal.test(score~date,data=naver_movie)
kruskal.test(score~hour,data=naver_movie)
kruskal.test(score~dh,data=naver_movie)
anova(lm(score~date*hour,data=naver_movie))
library(rJava)
library(KoNLP)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
useSejongDic()
require(dplyr)
review <- naver_movie %>% select(review)
write.table(review,"D:/Workplace/R_Project/1st project/personal/review.txt")
require(stringr)
review <- readLines("D:/Workplace/R_Project/1st project/personal/review.txt")
review <- str_replace_all(review,"[A-z]","") # 모든 영문자 제거
review <- str_replace_all(review,"\\d","") # 숫자 제거
review <- str_replace_all(review,"[:punct:]","") # 특수문자 제거
head(review)
words <- sapply(review,extractNoun,USE.NAMES=F) # 명사 추출
head(unlist(words),100)
words <- unlist(words)
words <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=5}, words)
words <- gsub("^","",words)
words <- gsub("^ㅋ","",words)
words <- gsub("^ㅎ","",words)
words <- gsub("기생충","",words)
words <- gsub("^ㄷ","",words)
words <- gsub("^ㄱ","",words)
words <- gsub("관람객","",words)
words <- gsub("봉준호는","봉준호",words)
words <- sapply(review,extractNoun,USE.NAMES=F) # 명사 추출
head(unlist(words),100)
words <- unlist(words)
words <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=5}, words)
words <- gsub("\^","",words)
words <- gsub("^","",words)
words <- gsub("ㅋ","",words)
words <- gsub("^ㅋ","",words)
words <- gsub("^ㅎ","",words)
words <- gsub("^ㄷ","",words)
words <- gsub("^ㄱ","",words)
words <- gsub("관람객","",words)
words <- gsub("박서준이","박서준",words)
words <- gsub("봉준호는","봉준호",words)
words <- gsub("봉감독","봉준호",words)
wordcount <- table(words)
head(sort(wordcount,decreasing=T),30)
head(sort(wordcount,decreasing=T),50)
words <- gsub("^","",words)
words <- str_replace_all(words," ","")
wordcount <- table(words)
head(sort(wordcount,decreasing=T),50)
review <- readLines("D:/Workplace/R_Project/1st project/personal/review.txt")
review <- str_replace_all(review,"[A-z]","") # 모든 영문자 제거
review <- str_replace_all(review,"\\d","") # 숫자 제거
review <- str_replace_all(review,"[:punct:]","") # 특수문자 제거
words <- sapply(review,extractNoun,USE.NAMES=F) # 명사 추출
head(unlist(words),100)
words <- unlist(words)
tail(unlist(words),100)
words <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=5}, words)
words <- gsub("^ㅋ","",words)
words <- gsub("^ㅎ","",words)
words <- gsub("^ㄷ","",words)
words <- gsub("^ㄱ","",words)
words <- gsub("^","",words)
words <- gsub("있었","",words)
words <- gsub("하가","",words)
words <- gsub("죽습니","죽다",words)
words <- gsub("재밌","재밌다",words)
words <- gsub("박서준이","박서준",words)
words <- gsub("봉준호는","봉준호",words)
words <- gsub("봉감독","봉준호",words)
review <- naver_movie %>% select(review)
write.table(review,"D:/Workplace/R_Project/1st project/personal/review.txt")
require(stringr)
review <- readLines("D:/Workplace/R_Project/1st project/personal/review.txt")
review <- str_replace_all(review,"[A-z]","") # 모든 영문자 제거
review <- str_replace_all(review,"\\d","") # 숫자 제거
review <- str_replace_all(review,"[:punct:]","") # 특수문자 제거
words <- sapply(review,extractNoun,USE.NAMES=F) # 명사 추출
head(unlist(words),100)
words <- unlist(words)
words <- gsub("^ㅋ","",words)
words <- gsub("^ㅎ","",words)
words <- gsub("^ㄷ","",words)
words <- gsub("^ㄱ","",words)
words <- gsub("^","",words)
words <- gsub("있었","",words)
words <- gsub("하가","",words)
words <- gsub("죽습니","죽다",words)
words <- gsub("재밌","재밌다",words)
words <- gsub("박서준이","박서준",words)
words <- gsub("봉준호는","봉준호",words)
words <- gsub("봉감독","봉준호",words)
words <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=5}, words)
wordcount <- table(words)
head(sort(wordcount,decreasing=T),50)
require(RColorBrewer)
palete <- brewer.pal(12,"Paired")
par(oma=rep(0,4))
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
?wordcloud
legend(0.2,0.8,"영화 '기생충' 관련 네티즌 반응",cex=0.8,fill=NA,border=NA,bg="yellow",
text.col="blue",text.font=2,box.col="red")
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete,backgroundColor="black",rotateRatio=0.75)
?wordcloud2
install.packages("devtools")
install.packages("devtools")
devtools::install_github("Ichiffon/wordcloud2")
devtools::install_github("lchiffon/wordcloud2")
library(wordcloud2)
require(devtools)
install_github("lchiffon/wordcloud2")
install.packages("wordcloud2")
library(wordcloud2)
wordcloud2(data=wordcount,size=1.5)
wordcloud2(data=wordcount,size=1.5,color="random-light",rotateRatio=0.75)
tail(sort(wordcount,decreasing=T),50)
wordorder <- order(wordcount,decreasing=T)
for (i in 1:length(wordorder)) {
if(wordcount[wordorder[i]]==1) {
break
}
}
freqwords <- wordcount[wordorder[1:i-1]]
i
head(freqwords)
head(freqwords,50)
t먀ㅣ(freqwords,50)
tail(freqwords,50)
wordcloud2(data=freqwords,size=1.5,color="random-light",rotateRatio=0.75)
wordcloud2(data=freqwords,size=1.5,color="random-light")
require(RColorBrewer)
palete <- brewer.pal(12,"Paired")
par(oma=rep(0,4))
wordcloud(data=names(freqwords),freq=freqwords,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete,backgroundColor="black",rotateRatio=0.75)
library(wordcloud)
wordcloud(data=names(freqwords),freq=freqwords,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete,backgroundColor="black",rotateRatio=0.75)
require(wordcloud)
par(oma=rep(0,4))
wordcloud(data=names(freqwords),freq=freqwords,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete,backgroundColor="black",rotateRatio=0.75)
library(rJava)
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
useSejongDic()
require(dplyr)
review <- naver_movie %>% select(review)
write.table(review,"D:/Workplace/R_Project/1st project/personal/review.txt")
require(stringr)
review <- readLines("D:/Workplace/R_Project/1st project/personal/review.txt")
review <- str_replace_all(review,"[A-z]","") # 모든 영문자 제거
review <- str_replace_all(review,"\\d","") # 숫자 제거
review <- str_replace_all(review,"[:punct:]","") # 특수문자 제거
words <- sapply(review,extractNoun,USE.NAMES=F) # 명사 추출
head(unlist(words),100)
words <- unlist(words)
words <- gsub("^ㄷ","",words)
words <- gsub("^ㄷ","",words)
words <- gsub("^ㄱ","",words)
words <- gsub("^ㄱ","",words)
words <- gsub("^","",words)
words <- gsub("^","",words)
words <- gsub("있었","",words)
words <- gsub("^","",words)
words <- gsub("있었","",words)
words <- gsub("하가","",words)
words <- gsub("죽습니","죽다",words)
words <- gsub("죽습니","죽다",words)
words <- gsub("재밌","재밌다",words)
words <- gsub("죽습니","죽다",words)
words <- gsub("재밌","재밌다",words)
words <- gsub("영화였습니","영화",words)
words <- gsub("영화였습니","영화",words)
words <- gsub("영화입니","영화",words)
words <- gsub("영화입니","영화",words)
words <- gsub("박서준이","박서준",words)
words <- gsub("박서준이","박서준",words)
words <- gsub("봉준호는","봉준호",words)
words <- gsub("봉준호는","봉준호",words)
words <- gsub("봉감독","봉준호",words)
words <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=5}, words)
wordcount <- table(words)
head(sort(wordcount,decreasing=T),50)
wordorder <- order(wordcount,decreasing=T)
for (i in 1:length(wordorder)) {
if(wordcount[wordorder[i]]==1) {
break
}
}
freqwords <- wordcount[wordorder[1:i-1]]
head(freqwords,50)
require(RColorBrewer)
palete <- brewer.pal(12,"Paired")
require(wordcloud)
par(oma=rep(0,4))
wordcloud(data=names(freqwords),freq=freqwords,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete,backgroundColor="black",rotateRatio=0.75)
wordcloud(data=names(freqwords),freq=freqwords,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
names(freqwords)
wordorder <- order(wordcount,decreasing=T)
for (i in 1:length(wordorder)) {
if(wordcount[wordorder[i]]==1) {
break
}
}
wordcount <- wordcount[wordorder[1:i-1]]
head(wordcount,50)
require(RColorBrewer)
palete <- brewer.pal(12,"Paired")
require(wordcloud)
par(oma=rep(0,4))
wordcloud(data=names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
## 필요 패키지 설치
library(rvest)
## 필요 패키지 설치
library(rvest)
library(dplyr)
## 필요 패키지 설치
library(rvest)
library(dplyr)
library(stringr)
library(openxlsx)
library(abind)
# 엑셀파일로 불러낸 데이터를 엑셀작업 후 R로 불러들임.
naver_movie <- read.csv("D:/Workplace/R_Project/1st project/personal/naver_movie.csv",header=T)
library(rJava)
library(rJava)
library(KoNLP)
library(RColorBrewer)
useSejongDic()
library(rJava)
library(KoNLP)
install.packages("KoNLP")
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
install.packages("KoNLP")
library(KoNLP)
install.packages('digest')
library(KoNLP)
library(wordcloud)
library(RColorBrewer)
useSejongDic()
require(dplyr)
review <- naver_movie %>% select(review)
write.table(review,"D:/Workplace/R_Project/1st project/personal/review.txt")
require(stringr)
review <- readLines("D:/Workplace/R_Project/1st project/personal/review.txt")
review <- str_replace_all(review,"[A-z]","") # 모든 영문자 제거
review <- str_replace_all(review,"\\d","") # 숫자 제거
review <- str_replace_all(review,"[:punct:]","") # 특수문자 제거
words <- sapply(review,extractNoun,USE.NAMES=F) # 명사 추출
head(unlist(words),100)
words <- unlist(words)
words <- gsub("^ㄷ","",words)
words <- gsub("^ㄱ","",words)
words <- gsub("^","",words)
words <- gsub("있었","",words)
words <- gsub("하가","",words)
words <- gsub("죽습니","죽다",words)
words <- gsub("영화였습니","영화",words)
words <- gsub("영화입니","영화",words)
words <- gsub("박서준이","박서준",words)
words <- gsub("봉감독","봉준호",words)
words <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=5}, words)
wordcount <- table(words)
head(sort(wordcount,decreasing=T),50)
wordorder <- order(wordcount,decreasing=T)
for (i in 1:length(wordorder)) {
if(wordcount[wordorder[i]]==1) {
break
}
}
wordcount <- wordcount[wordorder[1:i-1]]
head(wordcount,50)
require(RColorBrewer)
palete <- brewer.pal(12,"Paired")
require(wordcloud)
par(oma=rep(0,4))
wordcloud(data=names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
wordcount <- table(words)
head(sort(wordcount,decreasing=T),50)
require(RColorBrewer)
palete <- brewer.pal(12,"Paired")
require(wordcloud)
par(oma=rep(0,4))
wordcloud(data=names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
wordcloud(names(wordcount),freq=wordcount,scale=c(5,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
wordcount
review <- naver_movie %>% select(review)
write.table(review,"D:/Workplace/R_Project/1st project/personal/review.txt")
require(stringr)
review <- readLines("D:/Workplace/R_Project/1st project/personal/review.txt")
review <- str_replace_all(review,"[A-z]","") # 모든 영문자 제거
review <- str_replace_all(review,"\\d","") # 숫자 제거
review <- str_replace_all(review,"[:punct:]","") # 특수문자 제거
words <- sapply(review,extractNoun,USE.NAMES=F) # 명사 추출
head(unlist(words),100)
words <- unlist(words)
words <- gsub("^ㄷ","",words)
words <- gsub("^ㄱ","",words)
words <- gsub("^","",words)
words <- gsub("있었","",words)
words <- gsub("하가","",words)
words <- gsub("죽습니","죽다",words)
words <- gsub("재밌","재밌다",words)
words <- gsub("영화였습니","영화",words)
words <- gsub("영화입니","영화",words)
words <- gsub("박서준이","박서준",words)
words <- gsub("봉준호는","봉준호",words)
words <- gsub("봉감독","봉준호",words)
words <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=5}, words)
wordcount <- table(words)
head(sort(wordcount,decreasing=T),50)
wordorder <- order(wordcount,decreasing=T)
for (i in 1:length(wordorder)) {
if(wordcount[wordorder[i]]==1) {
break
}
}
wordcount <- wordcount[wordorder[1:i-1]]
wordcount <- table(wordcount[wordorder[1:i-1]])
wordcount <- table(words)
head(sort(wordcount,decreasing=T),50)
wordorder <- order(wordcount,decreasing=T)
for (i in 1:length(wordorder)) {
if(wordcount[wordorder[i]]==1) {
break
}
}
wordcount[wordorder[1:3]]
str(wordcount)
freqwords <- wordcount[wordorder[1:i-1]]
require(RColorBrewer)
palete <- brewer.pal(12,"Paired")
require(wordcloud)
par(oma=rep(0,4))
wordcloud(names(wordcount),freq=wordcount,scale=c(8,2),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
wordcloud(names(wordcount),freq=wordcount,scale=c(7,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
words <- gsub("<","",words)
words <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=5}, words)
wordcount <- table(words)
head(sort(wordcount,decreasing=T),50)
require(RColorBrewer)
palete <- brewer.pal(12,"Paired")
require(wordcloud)
par(oma=rep(0,4))
wordcloud(names(wordcount),freq=wordcount,scale=c(8,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
wordcloud(names(wordcount),freq=wordcount,scale=c(8,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
wordcloud(names(wordcount),freq=wordcount,scale=c(10,0.5),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
wordcloud(names(wordcount),freq=wordcount,scale=c(10,2),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
par(oma=rep(0,4))
wordcloud(names(wordcount),freq=wordcount,scale=c(10,1),rot.per=0.25,min.freq=2,
random.order=F,random.color=T,colors=palete)
## 필요 패키지 설치
library(rvest)
library(dplyr)
library(stringr)
library(openxlsx)
library(abind)
trim <- function(x) gsub("^\\s+|\\s+$", "", x)
base_url <- "https://movie.naver.com"
url_sub <- "/movie/bi/mi/point.nhn?code=161967"
url <- paste0(base_url,url_sub)
url
html <- read_html(url)
## 네티즌 평가, 평점 관련 url 추출
url2 <- html %>% html_node('iframe.ifr') %>% html_attr('src')
url_add <- "&page="
url_ifr <- paste0(base_url,url2,url_add)
url_ifr
# 엑셀파일로 불러낸 데이터를 엑셀작업 후 R로 불러들임.
naver_movie <- read.csv("D:/Workplace/R_Project/1st project/personal/naver_movie.csv",header=T)
library(ggplot2)
library(gridExtra)
## 필요 패키지 설치
library(rvest)
library(dplyr)
library(stringr)
library(openxlsx)
library(abind)
data_movie <- naver_movie %>%
select(score,date,hour)
# 일자별 평균평점 데이터
data_movie1 <- data_movie %>%
group_by(date) %>%
summarise(average=mean(score,na.rm=T))
# 시간대별 평균평점 데이터
data_movie2 <- data_movie %>%
group_by(hour) %>%
summarise(average=mean(score,na.rm=T))
ggplot(data_movie1,aes(x=date,y=average,fill=date)) +
geom_bar(stat="identity") +
xlab("날짜") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 일자별 네티즌 평균평점") +
theme(plot.title = element_text(color="black",size=20,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=15,face="bold"),
axis.title.y = element_text(color="blue",size=15,face="bold"))
data_movie1_1 <- data_movie1 %>%
filter(date %in% c('2019.05.30','2019.05.31','2019.06.01','2019.06.02','2019.06.03',
'2019.06.04','2019.06.05','2019.06.06','2019.06.07'))
data_movie1_2 <- data_movie1 %>%
filter(date %in% c('2019.06.08','2019.06.09','2019.06.10','2019.06.11','2019.06.12',
'2019.06.13','2019.06.14','2019.06.15','2019.06.16'))
data_movie1_3 <- data_movie1 %>%
filter(date %in% c('2019.06.17','2019.06.18','2019.06.19','2019.06.20','2019.06.21',
'2019.06.22','2019.06.23','2019.06.24','2019.06.25'))
data_movie1_4 <- data_movie1 %>%
filter(date %in% c('2019.06.26','2019.06.27','2019.06.28','2019.06.29','2019.06.30',
'2019.07.01','2019.07.02','2019.07.03','2019.07.04','2019.07.05'))
require(ggplot2)
require(gridExtra)
g1 <- ggplot(data_movie1_1,aes(x=date,y=average,fill=date)) +
geom_bar(stat="identity") +
xlab("날짜") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 일자별 네티즌 평균평점 1") +
theme(plot.title = element_text(color="black",size=13,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=11,face="bold"),
axis.title.y = element_text(color="blue",size=11,face="bold"))
g2 <- ggplot(data_movie1_2,aes(x=date,y=average,fill=date)) +
geom_bar(stat="identity") +
xlab("날짜") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 일자별 네티즌 평균평점 2") +
theme(plot.title = element_text(color="black",size=13,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=11,face="bold"),
axis.title.y = element_text(color="blue",size=11,face="bold"))
g3 <- ggplot(data_movie1_3,aes(x=date,y=average,fill=date)) +
geom_bar(stat="identity") +
xlab("날짜") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 일자별 네티즌 평균평점 3") +
theme(plot.title = element_text(color="black",size=13,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=11,face="bold"),
axis.title.y = element_text(color="blue",size=11,face="bold"))
g4 <- ggplot(data_movie1_4,aes(x=date,y=average,fill=date)) +
geom_bar(stat="identity") +
xlab("날짜") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 일자별 네티즌 평균평점 4") +
theme(plot.title = element_text(color="black",size=13,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=11,face="bold"),
axis.title.y = element_text(color="blue",size=11,face="bold"))
grid.arrange(g1,g2,g3,g4,nrow=2,ncol=2)
# 일자별, 시간대별 평균평점 데이터
data_movie3 <- data_movie %>%
group_by(date,hour) %>%
summarise(average=mean(score,na.rm=T))
37*24
