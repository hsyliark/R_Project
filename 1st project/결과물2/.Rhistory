setwd("D:/Workplace/R_Project/1st project/결과물2")
install.packages("wordcloud2")
library(wordcloud2)
## 필요 패키지 설치
library(rvest)
library(stringr)
library(openxlsx)
library(abind)
library(dplyr)
# 엑셀파일로 불러낸 데이터를 엑셀작업 후 R로 불러들임.
naver_movie <- read.csv("D:/Workplace/R_Project/1st project/결과물2/naver_movie.csv",header=T)
str(naver_movie)
library(rJava)
library(KoNLP)
library(KoNLP)
library(wordcloud)
library(wordcloud2)
library(RColorBrewer)
useSejongDic()
require(dplyr)
review <- naver_movie %>% select(review)
write.table(review,"D:/Workplace/R_Project/1st project/결과물2/review.txt")
require(stringr)
review <- readLines("D:/Workplace/R_Project/1st project/결과물2/review.txt")
review <- str_replace_all(review,"[A-z]","") # 모든 영문자 제거
review <- str_replace_all(review,"\\d","") # 숫자 제거
review <- str_replace_all(review,"[:punct:]","") # 특수문자 제거
words <- sapply(review,extractNoun,USE.NAMES=F) # 명사 추출
head(unlist(words),100)
words <- unlist(words)
words <- gsub("^ㄷ","",words)
words <- gsub("^ㄱ","",words)
words <- gsub("^ㄴ","",words)
words <- gsub("있었","",words)
words <- gsub("하가","",words)
words <- gsub("죽습니","죽다",words)
words <- gsub("재밌","재밌다",words)
words <- gsub("영화였습니","영화",words)
words <- gsub("영화입니","영화",words)
words <- gsub("박서준이","박서준",words)
words <- gsub("봉준호는","봉준호",words)
words <- gsub("봉감독","봉준호",words)
words <- Filter(function(x) {nchar(x)>=2 & nchar(x)<=5}, words)
wordcount <- table(words)
head(sort(wordcount,decreasing=T),50)
require(RColorBrewer)
palete <- brewer.pal(12,"Paired")
require(wordcloud)
par(mai=rep(0,4))
wordcloud(names(wordcount),freq=wordcount,scale=c(7,0.45),rot.per=0.25,min.freq=31,
random.order=F,random.color=T,colors=palete)
wordcloud2(wordcount, size=0.5, col="random-light", backgroundColor="black")
wordcloud2(wordcount,size=1,col="random-light",backgroundColor="grey")
?wordcloud2
wordcloud2(wordcount,size=2,col="random-light",rotateRatio=0.5,backgroundColor="black",
shape="star")
wordcount[wordcount>30]
wordcloud2(wordcount[wordcount>30],size=2,col="random-light",rotateRatio=0.5,
backgroundColor="black",shape="star")
(wordcount[wordcount>30],size=2,col="random-light",rotateRatio=0.5,
backgroundColor="black",shape="cardioid")
wordcloud2(wordcount[wordcount>30],size=2,col="random-light",rotateRatio=0.5,
backgroundColor="black",shape="cardioid")
wordcloud2(wordcount,size=2,col="random-light",rotateRatio=0.5,
backgroundColor="black",shape="cardioid")
wordcloud2(wordcount,size=2,col="random-light",rotateRatio=0.5,
backgroundColor="black",word="MOVIE")
lettercloud(wordcount,size=2,col="random-light",rotateRatio=0.5,
backgroundColor="black",word="MOVIE")
require(wordcloud2)
lettercloud(wordcount,size=2,col="random-light",rotateRatio=0.5,
backgroundColor="black",word="MOVIE")
?letterCloud
letterCloud(wordcount,size=2,col="random-light",rotateRatio=0.5,
backgroundColor="black",word="MOVIE")
letterCloud(wordcount[wordcount>30],size=2,col="random-light",rotateRatio=0.5,
backgroundColor="black",word="MOVIE")
letterCloud(wordcount[wordcount>30],backgroundColor="black",word="MOVIE")
wordcloud2(wordcount[wordcount>30],size=2,col="random-light",rotateRatio=0.5,
backgroundColor="black",shape="star")
wordcloud2(wordcount[wordcount>30],size=2,col="random-light",rotateRatio=0.5,
backgroundColor="black")
?letterCloud
letterCloud(wordcount[wordcount>30],backgroundColor="black",word="M")
?geom_boxplot
library(ggplot2)
?geom_boxplot
library(ggplot2)
library(gridExtra)
require(dplyr)
data_movie <- naver_movie %>%
select(score,date,hour)
# 일자별 평균평점 데이터
data_movie1 <- data_movie %>%
group_by(date) %>%
summarise(average=mean(score,na.rm=T))
# 시간대별 평균평점 데이터
data_movie2 <- data_movie %>%
group_by(hour) %>%
summarise(average=mean(score,na.rm=T))
require(dplyr)
data_movie1_1 <- data_movie1 %>%
filter(date %in% c('2019.05.30','2019.05.31','2019.06.01','2019.06.02','2019.06.03',
'2019.06.04','2019.06.05','2019.06.06','2019.06.07'))
data_movie1_2 <- data_movie1 %>%
filter(date %in% c('2019.06.08','2019.06.09','2019.06.10','2019.06.11','2019.06.12',
'2019.06.13','2019.06.14','2019.06.15','2019.06.16'))
data_movie1_3 <- data_movie1 %>%
filter(date %in% c('2019.06.17','2019.06.18','2019.06.19','2019.06.20','2019.06.21',
'2019.06.22','2019.06.23','2019.06.24','2019.06.25'))
data_movie1_4 <- data_movie1 %>%
filter(date %in% c('2019.06.26','2019.06.27','2019.06.28','2019.06.29','2019.06.30',
'2019.07.01','2019.07.02','2019.07.03','2019.07.04','2019.07.05'))
require(ggplot2)
ggplot(data_movie1_1,aes(x=date,y=average,fill=date)) +
geom_boxplot(notch=TRUE) +
xlab("날짜") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 일자별 네티즌 평균평점 1") +
theme(plot.title = element_text(color="black",size=12,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=9,face="bold"),
axis.title.y = element_text(color="blue",size=9,face="bold"))
ggplot(data_movie1_1,aes(x=date,y=average,fill=date)) +
geom_area(stat='bin') +
xlab("날짜") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 일자별 네티즌 평균평점 1") +
theme(plot.title = element_text(color="black",size=12,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=9,face="bold"),
axis.title.y = element_text(color="blue",size=9,face="bold"))
ggplot(data_movie1_1,aes(x=date,y=average,fill=date)) +
geom_bar(stat="identity") +
xlab("날짜") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 일자별 네티즌 평균평점 1") +
theme(plot.title = element_text(color="black",size=12,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=9,face="bold"),
axis.title.y = element_text(color="blue",size=9,face="bold"))
ggplot(data_movie1_1,aes(x=date,y=average,fill=date)) +
geom_bar(stat="identity") +
xlab("날짜") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 일자별 네티즌 평균평점 1") +
theme(plot.title = element_text(color="black",size=12,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=9,face="bold"),
axis.title.y = element_text(color="blue",size=9,face="bold")) +
opts(axis.text.x=theme_text(angle=45))
ggplot(data_movie1,aes(x=date,y=average,fill=date)) +
geom_bar(stat="identity") +
xlab("날짜") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 일자별 네티즌 평균평점") +
theme(plot.title = element_text(color="black",size=15,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=10,face="bold"),
axis.title.y = element_text(color="blue",size=10,face="bold"),
axis.text.x = element_text(angle=45))
ggplot(data_movie2,aes(x=hour,y=average)) +
geom_line(size=2) +
xlab("시간대") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 시간대별 네티즌 평균평점") +
theme(plot.title = element_text(color="black",size=15,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=10,face="bold"),
axis.title.y = element_text(color="blue",size=10,face="bold"))
ggplot(data_movie2,aes(x=hour,y=average)) +
geom_line(size=2) +
xlab("시간대") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 시간대별 네티즌 평균평점") +
theme(plot.title = element_text(color="black",size=15,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=10,face="bold"),
axis.title.y = element_text(color="blue",size=10,face="bold"),
axis.text.x = element_text(face="bold",color="darkgreen",size=10,angle=45),
axis.text.y = element_text(face="bold",color="darkgreen",size=10,angle=45))
ggplot(data_movie3,aes(x=hour,y=average,colour=date)) +
geom_line(size=1) +
xlab("시간대") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 네티즌 평균평점") +
theme(plot.title = element_text(color="black",size=15,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=10,face="bold"),
axis.title.y = element_text(color="blue",size=10,face="bold"))
# 일자별, 시간대별 평균평점 데이터
data_movie3 <- data_movie %>%
group_by(date,hour) %>%
summarise(average=mean(score,na.rm=T))
ggplot(data_movie3,aes(x=hour,y=average,colour=date)) +
geom_line(size=1) +
xlab("시간대") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 네티즌 평균평점") +
theme(plot.title = element_text(color="black",size=15,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=10,face="bold"),
axis.title.y = element_text(color="blue",size=10,face="bold"))
View(data_movie)
data_movie4 <- data_movie %>%
group_by(score) %>%
summarise(count=n())
data_movie4
# 평점 별 빈도수 데이터
data_movie4 <- data_movie %>%
group_by(score) %>%
summarise(count=n())
data_movie4
data_movie4
ggplot(data_movie4,aes(x=score,y=count,fill=score)) +
geom_bar(stat="identity") +
xlab("평점") + ylab("빈도수") +
ggtitle("영화 '기생충' 관련 평점 별 빈도수") +
theme(plot.title = element_text(color="black",size=20,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=15,face="bold"),
axis.title.y = element_text(color="blue",size=15,face="bold"),
axis.text.x = element_text(angle=45))
data_movie4 <- data_movie %>%
as.factor(score) %>%
group_by(score) %>%
summarise(count=n())
data_movie_n <- data_movie
data_movie_n$score <- as.factor(data_movie_n$score)
data_movie4 <- data_movie_n %>%
group_by(score) %>%
summarise(count=n())
data_movie4
data_movie4
ggplot(data_movie4,aes(x=score,y=count,fill=score)) +
geom_bar(stat="identity") +
xlab("평점") + ylab("빈도수") +
ggtitle("영화 '기생충' 관련 평점 별 빈도수") +
theme(plot.title = element_text(color="black",size=20,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=15,face="bold"),
axis.title.y = element_text(color="blue",size=15,face="bold"),
axis.text.x = element_text(angle=45))
colours()
ggplot(data_movie4,aes(x=score,y=count,fill=score)) +
geom_bar(stat="identity") +
xlab("평점") + ylab("빈도수") +
ggtitle("영화 '기생충' 관련 평점 별 빈도수") +
theme(plot.title = element_text(color="black",size=20,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=15,face="bold"),
axis.title.y = element_text(color="blue",size=15,face="bold"),
axis.text.x = element_text(face="bold",color="darksalmon",size=10,angle=45),
axis.text.y = element_text(face="bold",color="darksalmon",size=10,angle=45))
# 엑셀파일로 불러낸 데이터를 엑셀작업 후 R로 불러들임.
naver_movie <- read.csv("D:/Workplace/R_Project/1st project/결과물2/naver_movie.csv",header=T)
data_movie <- naver_movie %>%
select(score,date,hour)
## 필요 패키지 설치
library(rvest)
## 필요 패키지 설치
library(rvest)
library(dplyr)
## 필요 패키지 설치
library(rvest)
library(dplyr)
library(stringr)
library(abind)
library(ggplot2)
library(gridExtra)
require(dplyr)
data_movie <- naver_movie %>%
select(score,date,hour)
View(data_movie)
# 일자별 평균평점 데이터
data_movie1 <- data_movie %>%
group_by(date) %>%
summarise(average=mean(score,na.rm=T))
# 시간대별 평균평점 데이터
data_movie2 <- data_movie %>%
group_by(hour) %>%
summarise(average=mean(score,na.rm=T))
data_movie1
data_movie1_1 <- data_movie1 %>%
filter(date %in% c('2019.05.30','2019.05.31','2019.06.01','2019.06.02','2019.06.03',
'2019.06.04','2019.06.05','2019.06.06','2019.06.07'))
data_movie1_2 <- data_movie1 %>%
filter(date %in% c('2019.06.08','2019.06.09','2019.06.10','2019.06.11','2019.06.12',
'2019.06.13','2019.06.14','2019.06.15','2019.06.16'))
data_movie1_3 <- data_movie1 %>%
filter(date %in% c('2019.06.17','2019.06.18','2019.06.19','2019.06.20','2019.06.21',
'2019.06.22','2019.06.23','2019.06.24','2019.06.25'))
data_movie1_4 <- data_movie1 %>%
filter(date %in% c('2019.06.26','2019.06.27','2019.06.28','2019.06.29','2019.06.30',
'2019.07.01','2019.07.02','2019.07.03','2019.07.04','2019.07.05'))
View(data_movie1_1)
ggplot(data_movie1_1,aes(x=date,y=average,fill=date)) +
geom_bar(stat="identity") +
xlab("날짜") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 일자별 네티즌 평균평점 1") +
theme(plot.title = element_text(color="black",size=20,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=15,face="bold"),
axis.title.y = element_text(color="blue",size=15,face="bold"),
axis.text.x = element_text(angle=45)) +
geom_text(aes(y=average,label=average),color="black")
data_movie1_1 <- data_movie1 %>%
filter(date %in% c('2019.05.30','2019.05.31','2019.06.01','2019.06.02','2019.06.03',
'2019.06.04','2019.06.05','2019.06.06','2019.06.07')) %>%
mutate(ylabel=round(average,2))
data_movie1_2 <- data_movie1 %>%
filter(date %in% c('2019.06.08','2019.06.09','2019.06.10','2019.06.11','2019.06.12',
'2019.06.13','2019.06.14','2019.06.15','2019.06.16')) %>%
mutate(ylabel=round(average,2))
data_movie1_3 <- data_movie1 %>%
filter(date %in% c('2019.06.17','2019.06.18','2019.06.19','2019.06.20','2019.06.21',
'2019.06.22','2019.06.23','2019.06.24','2019.06.25')) %>%
mutate(ylabel=round(average,2))
data_movie1_4 <- data_movie1 %>%
filter(date %in% c('2019.06.26','2019.06.27','2019.06.28','2019.06.29','2019.06.30',
'2019.07.01','2019.07.02','2019.07.03','2019.07.04','2019.07.05')) %>%
mutate(ylabel=round(average,2))
ggplot(data_movie1_1,aes(x=date,y=average,fill=date)) +
geom_bar(stat="identity") +
xlab("날짜") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 일자별 네티즌 평균평점 1") +
theme(plot.title = element_text(color="black",size=20,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=15,face="bold"),
axis.title.y = element_text(color="blue",size=15,face="bold"),
axis.text.x = element_text(angle=45)) +
geom_text(aes(y=average,label=ylabel),color="black")
# 시간대별 평균평점 데이터
data_movie2 <- data_movie %>%
group_by(hour) %>%
summarise(average=mean(score,na.rm=T)) %>%
mutate(ylabel=round(average,2))
data_movie2
ggplot(data_movie2,aes(x=hour,y=average)) +
geom_line(size=2) +
xlab("시간대") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 시간대별 네티즌 평균평점") +
theme(plot.title = element_text(color="black",size=20,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=15,face="bold"),
axis.title.y = element_text(color="blue",size=15,face="bold"),
axis.text.x = element_text(face="bold",color="darkgreen",size=10,angle=45),
axis.text.y = element_text(face="bold",color="darkgreen",size=10,angle=45)) +
geom_text(aes(y=average,label=ylabel),color="black")
ggplot(data_movie2,aes(x=hour,y=average)) +
geom_line(size=2) +
xlab("시간대") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 시간대별 네티즌 평균평점") +
theme(plot.title = element_text(color="black",size=20,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=15,face="bold"),
axis.title.y = element_text(color="blue",size=15,face="bold"),
axis.text.x = element_text(face="bold",color="darkgreen",size=10,angle=45),
axis.text.y = element_text(face="bold",color="darkgreen",size=10,angle=45)) +
geom_text(aes(y=average,label=ylabel),color="orange")
ggplot(data_movie2,aes(x=hour,y=average)) +
geom_line(size=2) +
xlab("시간대") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 시간대별 네티즌 평균평점") +
theme(plot.title = element_text(color="black",size=20,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=15,face="bold"),
axis.title.y = element_text(color="blue",size=15,face="bold"),
axis.text.x = element_text(face="bold",color="darkgreen",size=10,angle=45),
axis.text.y = element_text(face="bold",color="darkgreen",size=10,angle=45)) +
geom_text(aes(y=average,label=ylabel),color="green")
ggplot(data_movie2,aes(x=hour,y=average)) +
geom_line(size=2) +
xlab("시간대") + ylab("평균 평점") +
ggtitle("영화 '기생충' 관련 시간대별 네티즌 평균평점") +
theme(plot.title = element_text(color="black",size=20,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=15,face="bold"),
axis.title.y = element_text(color="blue",size=15,face="bold"),
axis.text.x = element_text(face="bold",color="darkgreen",size=10,angle=45),
axis.text.y = element_text(face="bold",color="darkgreen",size=10,angle=45)) +
geom_text(aes(y=average,label=ylabel),color="darkgreen")
data_movie_n <- data_movie
data_movie_n$score <- as.factor(data_movie_n$score)
data_movie4 <- data_movie_n %>%
group_by(score) %>%
summarise(count=n())
data_movie4
ggplot(data_movie4,aes(x=score,y=count,fill=score)) +
geom_bar(stat="identity") +
xlab("평점") + ylab("빈도수") +
ggtitle("영화 '기생충' 관련 평점 별 빈도수") +
theme(plot.title = element_text(color="black",size=20,face="bold.italic",hjust=0.5),
axis.title.x = element_text(color="red",size=15,face="bold"),
axis.title.y = element_text(color="blue",size=15,face="bold"),
axis.text.x = element_text(face="bold",color="orange",size=10,angle=45),
axis.text.y = element_text(face="bold",color="darkorchid",size=10,angle=45)) +
geom_text(aes(y=count,label=count),color="black")
?ymd
colours()
